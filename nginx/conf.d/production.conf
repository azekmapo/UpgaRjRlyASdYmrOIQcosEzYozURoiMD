# Production Nginx Configuration
# nginx-First Architecture - Single Entry Point

# Upstream services configuration
upstream backend_prod {
    server backend:80;
    }

upstream frontend_prod {
    server frontend:80;
}

upstream notifications {
    server notifications-server:3001;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=general_limit:10m rate=100r/s;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=addr:10m;

# Cache settings
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;

# Main server block - Production
server {
    listen 80;
    server_name _;  # Change to your domain in production
    
    # Uncomment for HTTPS in production
    # listen 443 ssl http2;
    # ssl_certificate /etc/nginx/ssl/fullchain.pem;
    # ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers HIGH:!aNULL:!MD5;
    # ssl_prefer_server_ciphers on;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # HSTS (uncomment after testing HTTPS)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Logging
    error_log /var/log/nginx/error.log warn;
    access_log /var/log/nginx/access.log combined buffer=16k flush=5s;

    # Connection limits
    limit_conn addr 10;

    # Client body settings
    client_max_body_size 64M;
    client_body_buffer_size 128k;
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
    gzip_disable "msie6";

    # WebSocket server - notifications
    location /socket.io/ {
        limit_req zone=general_limit burst=50 nodelay;
        
        proxy_pass http://notifications;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
    }

    # API routes - Laravel backend
    location /api/ {
        # Rate limiting for API
        limit_req zone=api_limit burst=20 nodelay;
        
        # Stricter rate limiting for login endpoint
        location /api/auth/login {
            limit_req zone=login_limit burst=3 nodelay;
            
            # Handle CORS preflight
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '$http_origin' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With, X-CSRF-TOKEN' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 86400 always;
                return 204;
            }
            
            # Proxy to backend
            proxy_pass http://backend_prod;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;e
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
            proxy_buffering off;
        }

        # Handle CORS preflight for all API routes
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With, X-CSRF-TOKEN' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 86400 always;
            return 204;
        }

        # Proxy to backend
        proxy_pass http://backend_prod;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_buffering off;
    }

    # Storage files - proxy to backend
    location /storage/ {
        limit_req zone=general_limit burst=100 nodelay;
        
        proxy_pass http://backend_prod;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Cache static files
        proxy_cache api_cache;
        proxy_cache_valid 200 30d;
        add_header X-Cache-Status $upstream_cache_status;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    # Sanctum CSRF cookie
    location /sanctum/csrf-cookie {
        limit_req zone=api_limit burst=10 nodelay;
        
        proxy_pass http://backend_prod;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Frontend - serve production build
    location / {
        limit_req zone=general_limit burst=200 nodelay;
        
        proxy_pass http://frontend_prod;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache static assets
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to sensitive files
    location ~ /\.(env|git|svn|htaccess) {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Redirect HTTP to HTTPS (uncomment in production with SSL)
# server {
#     listen 80;
#     server_name _;  # Change to your domain
#     return 301 https://$server_name$request_uri;
# }
